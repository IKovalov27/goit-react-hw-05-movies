{"version":3,"file":"static/js/30.24ed4453.chunk.js","mappings":"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","sources":["api.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport noPhoto from './components/images/images.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '8fb08ce7c4baf0eda528d5cdd76e2668',\n  include_adult: false,\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/movie/week`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: block;\n\n  max-width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (min-width: 877px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    max-width: 1140px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n\n  margin-top: 25px;\n  margin-bottom: 20px;\n`;\n\nexport const Input  = styled.input`\n  height: 20px;\n  padding: 5px;\n\n  font-size: 15px;\n\n  width: 200px;\n\n  border: none;\n  outline: none;\n\n  padding-left: 8px;\n  padding-right: 4px;\n  margin-right: 10px;\n\n  border-radius: 5px;\n  border: 1px solid #212529;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n\n  transition: 250ms;\n\n  &::placeholder {\n    font-size: 15px;\n  }\n\n  @media (min-width: 877px) {\n    width: 250px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n\n  background-color: white;\n  border-radius: 5px;\n  border: 1px solid #212529;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n\n  transition: 250ms;\n\n  cursor: pointer;\n  outline: none;\n  font-weight: 600;\n\n  &:hover {\n    background-color: #212529;\n    color: white;\n    border: 1px solid transparent;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  margin: 0 auto 0 auto;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: inline-block;\n  width: 266px;\n  margin: 12px;\n\n  border: 1px solid rgba(0, 0, 0, 0.23);\n  border-radius: 5px;\n\n  transition: 250ms;\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n\n  padding: 5px;\n  margin: 0px;\n\n  font-size: 20px;\n  color: #212529;\n`;\n\nexport const Img = styled.img`\n  display: block;\n\n  height: 400px;\n  width: auto;\n  max-width: 266px;\n\n  padding: 0px;\n  margin: 0px;\n\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\n\n\n\n\n\n\n\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchByQuery } from '../../api';\n\nimport { Container, Input, Button, Form, List, Item, Img, TitleWrapper, MovieLink } from './Movies.styled.js';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const location = useLocation();\n\n  const searchQuery = searchParams.get('query');\n  useEffect(() => {\n    searchQuery && fetchByQuery(searchQuery).then(setMovies);\n  }, [searchQuery]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const response = await fetchByQuery(query);\n    setMovies(response);\n    setSearchParams({ query });\n    setQuery('');\n  };\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" value={query} placeholder=\"Search a movie\" onChange={onChange} />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {movies.length > 0 && (\n        <List>\n          {movies.map(({ id, title, poster }) => (\n            <Item key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <Img src={poster} alt={title}/>\n                <TitleWrapper>\n                  <h5>{title}</h5>\n                </TitleWrapper>\n              </MovieLink>\n            </Item>\n          ))}\n        </List>\n      )}\n    </Container>\n    </>\n  );\n};\n\nexport default Movies;\n\n"],"names":["axios","api_key","include_adult","IMG_URL","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","then","_ref2","data","results","map","_ref3","id","title","poster","poster_path","catch","error","console","log","message","stop","apply","arguments","fetchByQuery","_ref4","_callee2","query","_context2","concat","_ref5","_ref6","_x","fetchMovieDetails","movieId","_ref7","_ref7$data","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","_ref8","cast","_ref9","name","character","photo","profile_path","noPhoto","fetchMovieReviews","_ref10","_ref11","author","content","Container","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","Input","_templateObject3","Button","_templateObject4","List","_templateObject5","Item","_templateObject6","MovieLink","Link","_templateObject7","TitleWrapper","_templateObject8","Img","_templateObject9","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","handleSubmit","e","response","preventDefault","sent","_jsx","_Fragment","children","_jsxs","onSubmit","type","value","placeholder","onChange","target","length","to","state","from","src","alt"],"sourceRoot":""}