{"version":3,"file":"static/js/269.1942f343.chunk.js","mappings":"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","sources":["api.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport noPhoto from './components/images/images.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '8fb08ce7c4baf0eda528d5cdd76e2668',\n  include_adult: false,\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Button = styled.button`\n  display: block;\n  background-color: transparent;\n  padding: 5px 15px;\n  font-weight: 700;\n  cursor: pointer;\n\n  margin: 20px auto 15px auto;\n\n  border: 1px solid #212529;\n  border-radius: 5px;\n\n  transition: 250ms;\n  \n  &:hover {\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  }\n\n  @media (min-width: 768px) {\n    margin: 20px auto 15px 0;\n  }\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 300px;\n\n  margin-right: auto;\n  margin-left: auto;\n\n  text-align: center;\n\n  @media (min-width: 425px) {\n    max-width: 738px;\n  }\n\n  @media (min-width: 768px) {\n    max-width: 738px;\n    text-align: start;\n  }\n\n  @media (min-width: 877px) {\n    max-width: 1300px;\n    padding-left: 15px;\n    padding-right: 15px;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  display: block;\n\n  max-width: 425px;\n  margin-left: auto;\n  margin-right: auto;\n\n  margin-bottom: 30px;\n\n  @media (min-width: 768px) {\n    display: flex;\n    gap: 40px;\n\n    max-width: 738px;\n  }\n\n  @media (min-width: 877px) {\n    max-width: 1300px;\n  }\n`;\n\nexport const Img = styled.img`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 300px;\n\n  @media (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const AditionalList = styled.ul`\n  display: flex;\n\n  list-style: none;\n  gap: 15px;\n  padding: 0;\n  margin-bottom: 30px;\n\n  justify-content: center;\n\n  @media (min-width: 768px) {\n    justify-content: start;\n  }\n`;\n\nexport const InfoLink = styled(NavLink)`\n  background-color: transparent;\n  padding: 5px 15px;\n  font-size: 15px;\n  font-weight: 700;\n  text-decoration: none;\n  cursor: pointer;\n\n  color: #212529;\n\n  border: 1px solid #212529;\n  border-radius: 5px;\n\n  transition: 250ms;\n  \n  &:hover {\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  }\n\n  &.active {\n    background-color: #212529;\n    color: white;\n\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  }\n`;\n\n\n\n\n\n","import { useState, useEffect } from 'react';\n\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../api';\n\nimport { Container, Button, InfoWrapper, Img, AditionalList, InfoLink } from './MovieDetails.styled.js';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const { poster, title, releaseYear, userScore, overview, genres } =\n    movie ?? {};\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const backToMovies = () => {\n    navigate(backLinkHref);\n  };\n\n  return (\n    <Container>\n      <Button onClick={backToMovies}>\n        Back to movies\n      </Button>\n      {movie && (\n        <div>\n          <InfoWrapper>\n            <Img src={poster} alt={title} />\n            <div>\n              <h2>\n                {title} ({releaseYear})\n              </h2>\n              <p>User Score: {userScore}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>{genres.map(({ name }) => name).join(', ')}</p>\n            </div>\n          </InfoWrapper>\n\n          <h2>Additional information</h2>\n\n          <AditionalList>\n            <li>\n              <InfoLink to={`cast`} state={{ from: location?.state?.from }}>\n                Cast\n              </InfoLink>\n            </li>\n            <li>\n              <InfoLink to={`reviews`} state={{ from: location?.state?.from }}>\n                Reviews\n              </InfoLink>\n            </li>\n          </AditionalList>\n            <Outlet />\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default MovieDetails;"],"names":["axios","api_key","include_adult","IMG_URL","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","then","_ref2","data","results","map","_ref3","id","title","poster","poster_path","catch","error","console","log","message","stop","apply","arguments","fetchByQuery","_ref4","_callee2","query","_context2","concat","_ref5","_ref6","_x","fetchMovieDetails","movieId","_ref7","_ref7$data","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","_ref8","cast","_ref9","name","character","photo","profile_path","noPhoto","fetchMovieReviews","_ref10","_ref11","author","content","Button","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","InfoWrapper","_templateObject3","Img","_templateObject4","AditionalList","_templateObject5","InfoLink","NavLink","_templateObject6","_location$state$from","_location$state","_location$state2","_location$state3","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useParams","location","useLocation","navigate","useNavigate","backLinkHref","state","from","useEffect","_jsxs","children","_jsx","onClick","src","alt","join","to","Outlet"],"sourceRoot":""}