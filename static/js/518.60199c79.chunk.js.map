{"version":3,"file":"static/js/518.60199c79.chunk.js","mappings":"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","sources":["api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport noPhoto from './components/images/images.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '8fb08ce7c4baf0eda528d5cdd76e2668',\n  include_adult: false,\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : noPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1300px;\n\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  list-style: none;\n\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n  0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n\n  max-width: 200px;\n  margin: 12px;\n  border-radius: 5px;\n`;\n\nexport const Img = styled.img`\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const Description = styled.div`\n  padding: 8px;\n\n  color: #212529;\n`;\n\nexport const ActorName = styled.h3`\n  font-size: 15px;\n  margin: 0px;\n`;\n\nexport const Character = styled.p`\n  font-size: 13px;\n  margin: 5px 0 0 0;\n`;","import { fetchMovieCredits } from '../../api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Container, List, Item, Img, Description, ActorName, Character } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams('movieId');\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    fetchMovieCredits(movieId).then(setCredits);\n  }, [movieId]);\n\n  return (\n    <Container>\n      {credits.length > 0 && (\n        <List>\n          {credits.map(({ id, name, character, photo }) => {\n            return (\n              <Item key={id}>\n                <Img src={photo} alt={name} />\n                <Description>\n                  <ActorName>{name}</ActorName>\n                  <Character>Character: {character}</Character>\n                </Description>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n    </Container>\n  );\n};\n\nexport default Cast;"],"names":["axios","api_key","include_adult","IMG_URL","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","then","_ref2","data","results","map","_ref3","id","title","poster","poster_path","catch","error","console","log","message","stop","apply","arguments","fetchByQuery","_ref4","_callee2","query","_context2","concat","_ref5","_ref6","_x","fetchMovieDetails","movieId","_ref7","_ref7$data","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","_ref8","cast","_ref9","name","character","photo","profile_path","noPhoto","fetchMovieReviews","_ref10","_ref11","author","content","Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","Item","_templateObject3","Img","_templateObject4","Description","_templateObject5","ActorName","_templateObject6","Character","_templateObject7","useParams","_useState","useState","_useState2","_slicedToArray","credits","setCredits","useEffect","_jsx","children","length","_jsxs","src","alt"],"sourceRoot":""}